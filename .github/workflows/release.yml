on:
  push:
    branches:
      - main

permissions:
  contents: write
  pull-requests: write

name: release-please

jobs:
  release-please:
    runs-on: ubuntu-latest
    steps:
      - name: Get token
        id: get_token
        uses: tibdex/github-app-token@3beb63f4bd073e61482598c45c71c1019b59b73a # v2.1.0
        with:
          private_key: ${{ secrets.RELEASE_APP_PEM }}
          app_id: ${{ secrets.RELEASE_APP_ID }}
      - uses: googleapis/release-please-action@a02a34c4d625f9be7cb89156071d8567266a2445 # v4
        id: release
        with:
          token: ${{ steps.get_token.outputs.token }}
          release-type: node
    outputs:
      release_created: ${{ steps.release.outputs.release_created }}

  publish:
    needs: release-please
    if: needs.release-please.outputs.release_created
    name: ðŸ“¢ Publish
    permissions:
      contents: read
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
        with:
          node-version: ${{ env.NODE_VERSION }}
          registry-url: https://registry.npmjs.org/
      # Skip post-install scripts here, as a malicious
      # script could steal NODE_AUTH_TOKEN.
      - name: Install dependencies
        run: npm ci --ignore-scripts
        env:
          CI: true
          NODE_AUTH_TOKEN: ${{ secrets.CI_NPM_READ_ORG }}
      # `npm rebuild` will run all those post-install scripts for us.
      - run: npm rebuild && npm run prepare --if-present

      - name: Publish to NPM Package Registry
        run: npm publish --access=public
        env:
          CI: true
          NODE_AUTH_TOKEN: ${{ secrets.CI_NPM_REGISTRY }}
          # NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
